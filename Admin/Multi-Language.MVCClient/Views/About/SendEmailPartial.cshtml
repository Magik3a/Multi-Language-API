@model Multi_Language.MVCClient.Models.SendEmailViewModel


@if (ViewBag.IsSuccess != null )
{
    if (ViewBag.IsSuccess is bool && ViewBag.IsSuccess)
    {
        <div class="alert alert-success">
            <h4><i class="icon fa fa-check"></i> Message sent successfully!</h4>
            Really appreciate your opinion and we will get back to you, soon as possible.
        </div>
    }
    else
    {
        <div class="alert alert-danger">
            <h4><i class="icon fa fa-check"></i> Error in sending email!</h4>
            @Html.Raw(ViewBag.IsSuccess)
        </div>
    }
}
else
{
    <div class="box box-solid box-success" id="formSendEmail">
        <div class="box-body">
            @using (Ajax.BeginForm("SendEmail", "About", new {id = User.Identity.IsAuthenticated ? User.Identity.Name : null},
                new AjaxOptions()
                {
                    OnSuccess = "$.MltApi.SendEmail(data, status, xhr)",
                    UpdateTargetId = "formSendEmail",
                    InsertionMode = InsertionMode.ReplaceWith,
                    LoadingElementId = "message-loading"
                }, new {@class = "form-horizontal", role = "form"}))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.UserName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserEmail, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserEmail, new {@class = "form-control", required = "required"})
                        @Html.ValidationMessageFor(m => m.UserEmail, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Subject, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Subject, new {@class = "form-control", required = "required"})
                        @Html.ValidationMessageFor(m => m.Subject, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Message, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => m.Message, new {@class = "form-control", required = "required"})
                        @Html.ValidationMessageFor(m => m.Message, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-success" value="Send message awaay!"/>
                    </div>
                </div>
            }
        </div>
        <div class="overlay" id="message-loading" style="display: none">
            <i class="fa fa-spinner fa-spin"></i>
        </div>
    </div>
}