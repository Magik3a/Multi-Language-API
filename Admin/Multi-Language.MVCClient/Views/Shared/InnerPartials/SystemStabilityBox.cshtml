@using Newtonsoft.Json
@model Multi_Language.MVCClient.Models.SectionsViewModels.SystemStabilityBoxViewModel

<div class="box box-danger" id="systemStabilityBox">

    @Html.Hidden("HiddenModel", Html.Raw(JsonConvert.SerializeObject(Model)))


    <div class="box-header with-border">
        <h3 class="box-title">System Stability Report</h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            <div class="btn-group">
                <button class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown"><i class="fa fa-wrench"></i></button>
                <ul class="dropdown-menu" role="menu" id="refreshSystemStabilityBoxMenu">
                    <li><a href="#">Refresh now!</a></li>
                    <li class="divider"></li>
                    @*<li class="active"><a href="#" onclick="$.MltApi.ChangeSystemStabilityBox(this)">24 hours diagram</a></li>
            <li><a href="#" onclick="$.MltApi.ChangeSystemStabilityBox(this)">12 hours diagram</a></li>
            <li><a href="#" onclick="$.MltApi.ChangeSystemStabilityBox(this)">6 hours diagram</a></li>*@


                    <li class="">
                        @Ajax.ActionLink("24 hours diagram", "GetSystemStabilityBox", "Home", new {hoursBefore = 24},
                            new AjaxOptions
                            {
                                OnBegin = "$.MltApi.ChangeSystemStabilityBoxAjaxBegin(this)",
                                OnComplete = "$.MltApi.ChangeSystemStabilityBoxAjaxComplete()",
                                UpdateTargetId = "systemStabilityBox",
                                InsertionMode = InsertionMode.ReplaceWith
                            })
                    </li>

                    <li>
                        @Ajax.ActionLink("12 hours diagram", "GetSystemStabilityBox", "Home", new {hoursBefore = 12},
                            new AjaxOptions
                            {
                                OnBegin = "$.MltApi.ChangeSystemStabilityBoxAjaxBegin(this)",
                                OnComplete = "$.MltApi.ChangeSystemStabilityBoxAjaxComplete()",
                                UpdateTargetId = "systemStabilityBox",
                                InsertionMode = InsertionMode.ReplaceWith
                            })
                    </li>
                    <li>
                        @Ajax.ActionLink("6 hours diagram", "GetSystemStabilityBox", "Home", new {hoursBefore = 6},
                            new AjaxOptions
                            {
                                OnBegin = "$.MltApi.ChangeSystemStabilityBoxAjaxBegin(this)",
                                OnComplete = "$.MltApi.ChangeSystemStabilityBoxAjaxComplete()",
                                UpdateTargetId = "systemStabilityBox",
                                InsertionMode = InsertionMode.ReplaceWith
                            })
                    </li>
                </ul>

            </div>
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div><!-- /.box-header -->
    <div class="box-body">
        <div class="row">
            <div class="col-md-8">
                <p class="text-center">
                    <strong>From: @DateTime.Now.AddDays(-1).ToString("dd/MMMMM/yyyy") @Model.LoggetHours.FirstOrDefault():00 - To: @DateTime.Now.ToString("dd/MMMMM/yyyy HH:MM")</strong>
                </p>

                <div class="progress-group">
                    <span class="progress-text">Chart will be updated every hour.</span>
                    <div class="progress active progress-sm">
                        <div class="progress-bar  progress-bar-primary progress-bar-striped nextSystemInfoLoggsReloadingBar" role="progressbar" aria-valuemin="0"
                             aria-valuemax="100"></div>

                    </div>

                </div>
                <div class="chart">
                    <!-- Sales Chart Canvas -->
                    @*<canvas id="systemStabilityChart" height="125"></canvas>*@

                    <canvas id="systemStabilityChart"></canvas>
                </div><!-- /.chart-responsive -->
            </div><!-- /.col -->
            <div class="col-md-4 computerInfoBox">
                <p class="text-center">
                    <strong>System Resource Monitor</strong>
                </p>

                <div class="progress-group">
                    <span class="progress-text">New system stability info is received every minute.</span>
                    <div class="progress active progress-sm">
                        <div class="progress-bar progress-bar-primary progress-bar-striped  nextSystemInfoReloadingBar" role="progressbar" aria-valuemin="0"
                             aria-valuemax="100"></div>

                    </div>

                </div>
                <!-- ko foreach: machines -->

                <div class="info-box bg-gray-light">
                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Machine name</span>
                        <span data-bind="text: machineName" id="machineName" class="text-bold">@Model.MachineName</span>
                    </div><!-- /.info-box-content -->
                </div><!-- /.info-box -->

                <div class="info-box bg-gray-light">
                    <span class="info-box-icon "><i class="fa fa-server"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Memory available (mb)</span>
                        <span data-bind="text: memUsage" id="memoryAvailable" class="text-bold">@Model.MemoryAvailable</span>
                        <hr class="no-margin"/>
                        <span class="info-box-text">Memory total (mb)</span>
                        <span data-bind="text: memTotal" id="memoryTotal" class="text-bold">@Model.MemoryTotal</span>
                    </div><!-- /.info-box-content -->
                </div><!-- /.info-box -->

                <div class="progress-group">
                    <span class="progress-text">CPU</span>
                    <span class="progress-number"><b data-bind="text: cpu" id="cpuPercent">@Model.CpuPercent</b>%</span>
                    <div class="progress active">
                        <div class="progress-bar progress-bar-light-blue progress-bar-striped" data-bind="style: { width: cpu()}" style="width: @Model.CpuPercent%"></div>
                    </div>
                </div><!-- /.progress-group -->


                <div class="progress-group">
                    <span class="progress-text">Memory Available </span>
                    <span class="progress-number"><b data-bind="text: memPercent" id="memPercent">@Model.MemoryAvailablePercent</b>%</span>
                    <div class="progress active">
                        <div class="progress-bar progress-bar-light-blue progress-bar-striped" data-bind="style: { width: memPercent()}" style="width: @Model.MemoryAvailablePercent%"></div>
                    </div>
                </div><!-- /.progress-group -->
                <!-- /ko -->

            </div><!-- /.col -->
        </div>
        <!-- /.row -->
        @*
                <canvas id="some-dynamic-doughnut-chart"
                        data-bind="chart: { type: 'doughnut', data: DynamicDoughnutData, options: { observeChanges: true, throttle: 1000 } }"></canvas>

                <label>Red</label><input type="number" data-bind="value: RedValue" />
                <label>Green</label><input type="number" data-bind="value: GreenValue" />
                <label>Yellow</label><input type="number" data-bind="value: YellowValue" />
            </div>*@
    </div><!-- ./box-body -->

    <script>
        var jsonSystemStabilityChartModel = '@Html.Raw(JsonConvert.SerializeObject(Model))';

    </script>
</div><!-- /.box -->

