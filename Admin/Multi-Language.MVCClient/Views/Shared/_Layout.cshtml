<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Multi-Language API</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>
<!--
BODY TAG OPTIONS:
=================
Apply one or more of the following classes to get the
desired effect
|---------------------------------------------------------|
| SKINS         | skin-blue                               |
|               | skin-black                              |
|               | skin-purple                             |
|               | skin-yellow                             |
|               | skin-red                                |
|               | skin-green                              |
|---------------------------------------------------------|
|LAYOUT OPTIONS | fixed                                   |
|               | layout-boxed                            |
|               | layout-top-nav                          |
|               | sidebar-collapse                        |
|               | sidebar-mini                            |
|---------------------------------------------------------|
-->
<body class="hold-transition skin-red sidebar-mini">
    <div class="wrapper">

        <!-- Main Header -->
        @Html.Partial("LayoutPartials/MainHeader")

        <!-- Left side column. contains the logo and sidebar -->
        @Html.Partial("LayoutPartials/MainSidebar")

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <section class="content-header">
                <h1>
                    @ViewBag.ContentHeader
                    <small>@ViewBag.ContentDescription</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="#" id="breadcrumb-parent"><i class="fa fa-dashboard"></i> Level</a></li>
                    <li class="active" id="breadcrumb-child">Here</li>
                </ol>
            </section>

            <!-- Main content -->
            <section class="content" id="wrapper-page-content">
                <div class="row">
                    <div class="col-md-3" id="project-box" style="min-height: 176px">
                    </div>

                    <div id="first-row-content" class="col-md-9">
                        @*<div id="loading">
                                <div class="box box-solid">
                                    <div class="box-header with-border">
                                        <h3 class="box-title">Loading...</h3>
                                    </div>
                                    <!-- /.box-header -->
                                    <div class="box-body">
                                        <div class="progress">
                                            <div id="loading" class="progress-bar progress-bar-green" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: 40%">
                                                <span class="sr-only">40% Complete (success)</span>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>*@

                        <div id="data"></div>
                    </div>
                </div>
                <!-- Your Page Content Here -->
                <div id="page-content">
                    @RenderBody()
                </div>
            </section>
            <!-- /.content -->
        </div>

        <!-- Main Footer -->
        @Html.Partial("LayoutPartials/MainFooter")

        <!-- Control Sidebar -->
        @Html.Partial("LayoutPartials/ControlSidebar")

        <!-- Add the sidebar's background. This div must be placed
             immediately after the control sidebar -->
        <div class="control-sidebar-bg"></div>
    </div>

    <iframe id="file-download-frame" style="display:none;"></iframe>

    <!-- jQuery -->
    @Scripts.Render("~/bundles/jquery")

    <!-- Bootstrap -->
    @Scripts.Render("~/bundles/bootstrap")

    <!-- Theme and plugins -->
    @Scripts.Render("~/bundles/theme")
    <style>
        .kv-file-zoom {
            display: none;
        }
    </style>


<script>

    var pieOptions = {
        //Boolean - Whether we should show a stroke on each segment
        segmentShowStroke: true,
        //String - The colour of each segment stroke
        segmentStrokeColor: "#fff",
        //Number - The width of each segment stroke
        segmentStrokeWidth: 1,
        //Number - The percentage of the chart that we cut out of the middle
        percentageInnerCutout: 50, // This is 0 for Pie charts
        //Number - Amount of animation steps
        animationSteps: 100,
        //String - Animation easing effect
        animationEasing: "easeOutBounce",
        //Boolean - Whether we animate the rotation of the Doughnut
        animateRotate: true,
        //Boolean - Whether we animate scaling the Doughnut from the centre
        animateScale: false,
        //Boolean - whether to make the chart responsive to window resizing
        responsive: true,
        // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        maintainAspectRatio: false,
        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
        //String - A tooltip template
        tooltipTemplate: "<%=value %> <%=label%> users"
    };
    var data = {
        labels: [
            "Red",
            "Blue",
            "Yellow"
        ],
        datasets: [
        {
            data: [300, 50, 100],
            backgroundColor: [
                "#FF6384",
                "#36A2EB",
                "#FFCE56"
            ],
            hoverBackgroundColor: [
                "#FF6384",
                "#36A2EB",
                "#FFCE56"
            ]
        }]
    };

    var ctx = document.getElementById("pieChartSystemSpace");
    var myChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: pieOptions
    });
</script>
    <script>
        var baseAdressApi = '@System.Configuration.ConfigurationManager.AppSettings["MultiLanguageApiUrl"]';
        $(document).ajaxStart(function () {
            Pace.restart();
        });
        $(document).ready(function () {
            $.get({ url: "../../Sections/ProjectBox", cache: false }).then(function (data) {
                $("#project-box").append(data);
                $.get({ url: "../../Sections/ProjectBoxDropDowns", cache: false }).then(function (data2) {
                    $("#project-box").append(data2);
                });
            });
            $(".select2").select2();
            $('.dataTable').DataTable();
            $('input[type=checkbox]').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%', // optional
                ajaxSettings: {
                    headers: {
                        'Authorization': 'Bearer ' + "token"
                    }
                }
            });
            // TODO Add drag and drop options
            $("#input-backups")
                .fileinput({
                    uploadUrl: baseAdressApi + "/backup/upload", // server upload action
                    uploadAsync: true,
                    allowedPreviewTypes: false,
                    allowedFileExtensions: ['bak'],
                    showUploadedThumbs: false,
                    browseOnZoneClick: true,
                    maxFileCount: 5
                });

            var url = $(location).attr('href').split('/');
            LoadFirstRow("../../Sections/FirstRow?id=" + url[3]);

        });


        function activeProjectIsChanged(e) {
            $("#project-box").fadeTo("fast", 0, function () {
                $("#active-project-box").remove();
                $.get({ url: "../../Sections/ChangeActiveProject?id=" + $(e).val(), cache: false }).then(function (data) {
                    $("#project-box").prepend(data);

                    $("#project-box").fadeTo("fast", 100, function () {
                        var url = $(location).attr('href');

                        $.get({ url: url, cache: false }).then(function (data) {
                            $("#page-content").fadeTo("fast", 0, function () {
                                $("#page-content").html(" ");
                                $("#page-content").append(data);
                                $("#page-content").fadeTo("fast", 100, function () {
                                    urlSplited = url.split('/');
                                    LoadFirstRow("../../Sections/FirstRow?id=" + urlSplited[3]);

                                });
                                InitialisePlugins();

                            });
                        });
                    });
                });

            });

        };

        function AjaxClickBegin(elem) {
            var target = $(elem).parent();
            if (target.is("li")) {
                $(".sidebar-menu li").removeClass("active");

            }
            $("#page-content").fadeTo(0, 0, function () {
                if (target.is("li")) {
                    $(elem).append("<span id='mainSidebarLoader'><i class='fa fa-refresh fa-spin pull-right'></i></span>");
                    target.addClass("active");
                }
            });

        };
        function AjaxClickComplete(action, controller, icon) {
            $("#page-content").fadeTo("fast", 1, function () {
                $("#mainSidebarLoader").remove();
                $("#breadcrumb-parent").html("<i class='fa " + icon + "'></i>" + controller);
                $("#breadcrumb-child").html(action);
                var url = $(location).attr('href').split('/');
                if (url[3] != controller && action === "Index") {

                    $("#first-row-content").fadeTo("fast", 0);
                    $("#first-row-content").hide(250);
                    LoadFirstRow("../../Sections/FirstRow?id=" + controller);
                }
                InitialisePlugins();
                var content = $(".wrapper").html();
                window.history.pushState({ "html": content, "action": action }, action, '../../' + controller + '/' + action);
            });

        };
        function InitialisePlugins() {
            // initialise plugins if there is any
            if ($('.dataTable').children().length > 0) {
                $('.dataTable').DataTable();
            }
            if ($('input[type=checkbox]').length > 0) {
                $('input[type=checkbox]').iCheck({
                    checkboxClass: 'icheckbox_square-blue',
                    radioClass: 'iradio_square-blue',
                    increaseArea: '20%' // optional
                });
            }
            if ($(".select2").length > 0) {
                $(".select2").select2();
            }
            if ($("#input-backups").length > 0) {
                // TODO Add drag and drop options
                $("#input-backups")
                    .fileinput({
                        uploadUrl: baseAdressApi + "/backup/upload", // server upload action
                        uploadAsync: true,
                        actionZoom: '',
                        allowedPreviewTypes: false,
                        allowedFileExtensions: ['bak'],
                        browseOnZoneClick: true,
                        maxFileCount: 5
                    });
            }
        }
        function LoadFirstRow(url) {
            $("#first-row-content").fadeTo("fast", 0, function () {
                var progressElem = $('#first-row-content');
                var URL = url;
                // $("#loading").hide();
                $.ajax({
                    type: 'GET',
                    dataType: 'html',
                    url: URL,
                    cache: false,
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        console.log(thrownError);
                    },
                    xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        //Download progress
                        xhr.addEventListener("progress", function (evt) {
                            console.log(evt.lengthComputable);
                            if (evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                console.log(percentComplete);
                                progressElem.html(Math.round(percentComplete * 100) + "%");
                            }
                        }, false);
                        return xhr;
                    },
                    beforeSend: function () {
                        //  $('#loading').show();
                    },
                    complete: function () {
                        //   $("#loading").hide();
                    },
                    success: function (json) {
                        $("#first-row-content").html(json);
                        $("#first-row-content").show(250);
                        $("#first-row-content").fadeTo("fast", 100);
                    }
                });
            });
        };
        function AjaxClickSuccess(data, status, xhr) {
            $(".content-header h1").html(xhr.getResponseHeader("ContentHeader") + " <small>" + xhr.getResponseHeader("ContentDescription") + "</small>");
            if (xhr.getResponseHeader("ProjectIsChanged") != null) {
                $("#project-box").fadeTo("fast", 0, function () {
                    $("#project-box").html("");
                    $.get({ url: "../../Sections/ProjectBox?id=" + xhr.getResponseHeader("ProjectIsChanged"), cache: false }).then(function (data) {
                        $("#project-box").append(data);
                    });
                    $.get({ url: "../../Sections/ProjectBoxDropDowns", cache: false }).then(function (data2) {
                        $("#project-box").append(data2);
                    });
                    $("#project-box").fadeTo("fast", 100)
                });


            }
            if (xhr.getResponseHeader("ProjectDropDownIsChanged") != null) {
                $("#change-active-project-box").hide(300);
                console.log("changed");
                $.get({ url: "../../Sections/ProjectBoxDropDowns", cache: false }).then(function (data2) {
                    $("#change-active-project-box").remove();

                    $("#project-box").append(data2);
                });
            }
        };

        window.onpopstate = function (e) {
            if (e.state) {
                $(".wrapper").html(e.state.html);
                $("#page-content").fadeIn(200);
                document.title = e.state.action;
                $("#first-row-content").fadeTo("fast", 0);
                $("#first-row-content").hide(250);
                var url = $(location).attr('href').split('/');
                LoadFirstRow("../../Sections/FirstRow?id=" + url[3]);
            }
        };
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
